---
layout: post
title:  "Валидация форм"
date:   2016-10-04 19:00:00 +0300
categories: tutorials
tags: css html
related_courses: frontend_starter frontend_basic js_basic
permalink: form-validation
level: 1
---

# Валидация форм

#### Что такое валидация форм

В идеальном мире вы создаете форму, а пользователь вводит в нее абсолютно правильную информацию, но на самом деле все немного сложнее и приходится заниматься такой вещью как валидация формы.

В первую очередь, смысл этого занятия в том чтобы пользователь мог понять какую информацию вы хотите от него получить, ну и во-вторых, конечно же, на сервере эту информацию необходимо обработать.

### <span class="icon-homecode" id="validation-types" data-magellan-target="validation-types"></span> Методы валидации

Итак поговорим о методах валидацией форм.
Форму можно валидировать как на сервере, так и на клиенте.
Разница очевидна, когда мы валидируем форму на сервере пользователь должен дождаться ответа от сервера, валидация формы на клиенте гораздо быстрее дает пользователю понять правильно ли он ввел информацию.
Валидация формы может происходить как на сервере так и на клиенте, разница здесь очевидна: когда форма валидируется на сервере, пользователь должен дождаться ответа от сервера, валидация на клиенте происходит моментально и сразу дает понять пользователю правильную ли он вводит информацию.
 Также мы можем не отправлять форму на сервер если она не проходит проверку на клиенте. 
Для валидации на клиенте мы можем использовать javascript и css, по общему правилу, javascript используем только там, где css не справляется.

### <span class="icon-homecode" id="what-to-validate" data-magellan-target="what-to-validate"></span> Что нужно валидировать

Есть несколько типов проверки, которую должны проходить поля формы - это обязательные поля и правильность формата.
 
#### Обязательные поля
Наиболее очевидная проверка это наличие незаполненных обязательных полей, без которых данные формы не являются полезными для составителя формы.
Таким образом, при валидации необходимо убедиться что пользователь ввел данные в такие поля. 
Необходимо визуально обозначить такие поля как обязательные, чаще всего для этого используют звездочку, но так как не все пользователи понимает что значит звездочка, можно добавить еще и сообщение о том что это поле является обязательным. 
С этой задачей запросто может справиться css с помощью селектора :required.

Не рекомендуется  отмечать поля как обязательные после того как пользователь нажмет кнопку “Отправить форму” (submit).

> Старайтесь обходиться минимумом  обязательных полей. Делайте обязательными только самые необходимые данные и, в целом, стремитесь к подходу **“покупка в один клик”**.

Вот пример того как может выглядеть определение обязательных полей в HTML и CSS

<p data-height="265" data-theme-id="dark" data-slug-hash="KgyELZ" data-default-tab="html,result" data-user="webcamp" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/webcamp/pen/KgyELZ/">Form validation</a> by webcamp (<a href="http://codepen.io/webcamp">@webcamp</a>) on <a href="http://codepen.io">CodePen</a>.</p>

#### Правильный формат данных
Кроме того, что нужно убедиться, что пользователь вводит **всю** необходимую информацию, важно чтобы эта информация была **в правильном формате**. 
Это относится к полям email, дат, чисел, номера телефона и тому подобного. Если формат данных не подходит, пользователь должен четко это понимать из сообщения об ошибке формата.

Желательно как можно более ясно дать пользователю понять в каком виде вы хотите получить от него информацию. 

> Как обычно, нежелательно заставлять пользователя долго думать, поэтому **показывайте сообщение об ошибке формата как можно раньше**, то есть, в то время, как пользователь вводит информацию. 

С большинством задач по проверке формата  данных в поле формы может справиться HTML и CSS например вот так для поля email или так для поля пароль. 

Например, так можно проверять ввод четного числа от 10 до 20 с помощью `:invalid` и `:out-of-range`.

<p data-height="365" data-theme-id="dark" data-slug-hash="YGErWp" data-default-tab="html,result" data-user="webcamp" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/webcamp/pen/YGErWp/">Form validation</a> by webcamp (<a href="http://codepen.io/webcamp">@webcamp</a>) on <a href="http://codepen.io">CodePen</a>.</p>

#### Сообщения об ошибках

Если поле не проходит валидацию, ваша страница должна сообщить пользователю предельно ясно что именно он сделал не так и в каком виде вы хотите получить от него информацию. 
Пользователь должен легко заметить ваше сообщение об ошибке таким образом чтобы у него не возникало вопросов почему форма не отправляется. В конце концов данные от пользователя больше нужны вам, а не ему.

Желательно выделять сообщение об ошибке красным цветом текста или выделять поле, в котором пользователь ошибся красной рамкой для того, чтобы привлечь его внимание. 

Можно использовать понятную иконку красного цвета, которая должна помочь определить ошибку.

> Постарайтесь не заставлять пользователя вводить данные дважды, то есть **сообщите пользователю об ошибке как можно раньше** и как можно ближе к самому полю. 

Это плохо и непонятно выглядит, когда вы перечисляете все ошибки в одном поле сверху даже если это большой красный список, особенно если этот красный список появляется после нажатия кнопки отправить форму, которая еще и стирает все ранее введенные данные в форму.

Пользователю гораздо проще стереть несколько введенных символов чем перезаполнять форму сначала.

Предпочтительной будет проверка формата данных непосредственно во время ввода. 

> Позаботьтесь о том, чтобы  сообщения об ошибках исчезали также моментально, когда пользователь вводит правильную информацию, чтобы не запутать пользователя когда он не ошибается.

Если вы используете Javascript для валидации, не забывайте добавлять код, который убирает сообщения об ошибках.

<p data-height="455" data-theme-id="dark" data-slug-hash="Zpakyg" data-default-tab="js,result" data-user="webcamp" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/webcamp/pen/Zpakyg/">Form validation</a> by webcamp (<a href="http://codepen.io/webcamp">@webcamp</a>) on <a href="http://codepen.io">CodePen</a>.</p>

### <span class="icon-homecode" id="good" data-magellan-target="good"></span> Что еще хорошо

Будет полезно если вы поможете пользователю ввести правильные данные короткими и понятными подсказками возле полей формы. Предпочтительнее будут сообщения которые показываются всегда или в тот момент когда пользователь начинает ввод в поле, то есть фокусируется на поле. 
Менее удобными для пользователя будут всплывающие подсказки которые показываются на наведении мышки.

<script async src="//assets.codepen.io/assets/embed/ei.js"></script>